enum SortField {
  NAME
  MASS
  RADIUS
  HABITABILITY_INDEX
}

enum SortDirection {
  ASC
  DESC
}

input PlanetFilter {
  minMass: Float
  maxMass: Float
  minRadius: Float
  maxRadius: Float
  minHabitabilityIndex: Float
  maxHabitabilityIndex: Float
  nameContains: String
}

type Query {
  planets: [Planet!]
  planet(id: ID!): Planet
  paginatedPlanets(
    page: Int!
    size: Int
    sortBy: SortField = NAME
    sortDirection: SortDirection = ASC
    filter: PlanetFilter
  ): PagedPlanets!}

type Planet {
  id: ID!
  name: String!
  mass: Float!
  radius: Float!
  habitabilityIndex: Float!
  imageType: String!
  imageData: String!
}

type PagedPlanets {
  planets: [Planet!]!
  totalPages: Int!
  totalElements: Int!
  currentPage: Int!
}

type Mutation {
  createPlanet(
    name: String!
    mass: Float!
    radius: Float!
    orbitalPeriod: Float!
    planetTemperature: Float
    stellarTemperature: Int!
    stellarRadius: Float!
  ): Planet
}
